{"name":"Array.js","tagline":"Useful javascript array set methods like: subtract, intersect, exclusion, etc","body":"# Array.js\r\n\r\nArray.js offers javascript array useful set methods like:\r\n\r\n```\r\n[1,2,3,4].subtract([2,3,5]); //return [1,4]\r\n[1,2,3,4].intersect([2,3,5]); //return [2,3]\r\n[1,2,3,4].exclusion([2,3,5]); //return [1,4,5]\r\n```\r\n\r\nand native array methods support for old browsers:\r\n\r\n```\r\nisArray, indexOf, lastIndexOf, filter, forEach, map, some, every\r\n```\r\n\r\n\r\n***\r\n\r\n## How to use it\r\nJust add \r\n\r\n```\r\n<script type=\"text/javascript\" src=\"arraySet.js\"></script>\r\n```\r\n\r\nInclude this line if you want native array methods support (only needed for old browsers)\r\n```\r\n<script type=\"text/javascript\" src=\"arrayMethodsSupport.js\"></script>\r\n```\r\n\r\nand you'll be able to safely use set and native array methods\r\n\r\n\r\n## Documentation\r\n\r\n### Set methods\r\n\r\n\r\n_**subtract:**_\r\n```\r\na.subtract(b, fun)\r\nReturns elements of array a not contained in array b. \r\nUses fun(elemA, elemB) as comparision function. \r\nIf it's not provided uses elemA == elemB \r\n```\r\n\r\n\r\n_**intersect:**_\r\n```\r\na.intersect(b, fun)\r\nReturns common elements between array a and array b. \r\nUses fun(elemA, elemB) as comparision function. \r\nIf it's not provided uses elemA == elemB \r\n```\r\n\r\n\r\n_**exclusion:**_\r\n```\r\na.exclusion(b, fun)\r\nReturns not common elements between array a and array b. \r\nUses fun(elemA, elemB) as comparision function. \r\nIf it's not provided uses elemA == elemB \r\n```\r\n\r\n\r\n### Native array methods\r\nYou can find good documentation about native array methods at [mozilla developer page](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/prototype) or at \r\n[ECMAScript page](http://es5.github.io/#x15.4)","google":"UA-35949516-1","note":"Don't delete this file! It's used internally to help with page regeneration."}